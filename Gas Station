int Solution::canCompleteCircuit(const vector<int> &A, const vector<int> &B) {
    int n = A.size();
    int total_tank = 0;
    int current_tank = 0;
    int starting_station = 0;
    
    for (int i = 0; i < n; i++) {
        total_tank += A[i] - B[i];
        current_tank += A[i] - B[i];
        
        // If current tank is negative, we cannot start from this or any previous station
        if (current_tank < 0) {
            starting_station = i + 1; // Try the next station as the start
            current_tank = 0; // Reset current tank
        }
    }
    
    // If total tank is negative, we can't complete the circuit
    if (total_tank < 0) {
        return -1;
    }
    
    return starting_station;
}
